0.  The file format JPEG supports 16.7 million colors; the format PNG supports 281,474,976,710,656 colors; the file BMP supports 16 million colors; and the file GIF supports 256 colors. 
1.  Only the GIF file supports animation!
2.  Lossless compression means that a file may be completely recovered after is it compressed and uncompressed. Lossy compression means that, during compression, a file permanently loses certain information, resulting in an uncompressed file that is not 100% of what it was pre-compression (though users often do not notice any difference).
3.  JPEG is lossy compressed. 
4.  When a file is deleted on a FAT file system, the system: (1) "modifies the filename's first character in the file's directory entry to signal that the file has been deleted and that the directory entry can be recycled" and (2) "moves all of the file's FAT clusters to the hard drive's list of free clusters." Stated otherwise, the link to the file is deleted, but the file itself is not. 
5.  The best answer is likely to overwrite the disk a few times with "random passes." This should, practically, though not theoretically, sufficiently destroy the data. 
6.  The header file "stdint.h" is used for declaring integers of specific widths (i.e., the specific number of bits used). This header thus allows programmers to be incredibly specific in regard to widths, locations, and alignments of data. 
7.  The point to using these is to ensure that our unsigned integers (meaning non-negative integers) will be of size 8, 16, or 32; and our signed (positive or negative) integer will be size 32. Though these integers could be represented differently on another operating system, here, they will be this size exactly. 
8.  uint8_t  BYTE is 1 byte; uint32_t DWORD is 4 bytes; int32_t  LONG is 4 bytes; and uint16_t WORD is 2 bytes. 
9.  BMP's magic numbers, in hexadecimal, are: 42 4D.
10. BfSize is, as Window's puts it, "[t]he size, in bytes, of the bitmap file." And BiSize is, again as Window's puts it, "[t]he number of bytes required by the structure." The difference between the two is that BfSize tells you the size of the whole image and BiSize tells you the size of only the BITMAPINFOHEADER. 
11. If biHeight is negative, indicating a top-down structure, it means that "biCompression must be either BI_RGB or BI_BITFIELDS." Basically, this means that because bitmaps may be represented in top-up or bottom-down memory configurations, the "first byte in memory is the top-left pixel of the image." See https://msdn.microsoft.com/en-us/library/windows/desktop/dd407212(v=vs.85).aspx. 
12. The color depth is noted by the member: biBitCount. To quote Microsoft, "[t]he biBitCount member of the BITMAPINFOHEADER structure determines the number of bits that define each pixel and the maximum number of colors in the bitmap."
13. At line 37 fopen may do this if the third argument states to place copy's output in copy's executable file--i.e., ./copy large.bmp copy--and then this exit statement will run. On the other hand, fopen will trigger NULL at line 29 if the input file does not exist--e.g., ./copy foo copy.bmp.  
14. The third argument in fread is 1 because this is the number of elements for fread to read from the file. Here, this is 1 element of size BITMAPINFOHEADER. The first and last parts of fread tell fread where to read from (input) and where to read to (&bi).
15. 3
16. The function fseek, in copy.c in particular, moves the file pointer (inptr) by "padding" number of bytes relative to the current position of the pointer. If there is no padding, the file pointer is not moved. 
17. SEEK_CUR is a constant referring to the current position of the file pointer. SEEK_SET would refer to the beginning of the file, and SEEK_END would refer to the end of the file. 
18. I uncovered the clue, but I am not sure who the face represents. I am guessing: Colton Ogden. 
